---
# This task fails the Availability Group back to the original primary replica.
# It assumes the failback_ag.ps1 script sets the '$Ansible.Result' variable
# to a PowerShell object with 'Success' and 'Message' properties.

- name: Failback | Fail AG back to the original primary
  ansible.windows.win_powershell:
    script: "{{ lookup('file', 'failback_ag.ps1') }}"
    parameters:
      # The node that was the primary before the failover, our failback TARGET.
      AgFailbackTarget: "{{ ag_current_primary }}"
      AgName: "{{ ag_name }}"
      # The version we expect the original primary to be at now.
      DesiredSqlVersion: "{{ desired_sql_version }}"
      # The node that is currently primary, which we are failing over FROM.
      NewPrimary: "{{ new_primary }}"
  register: failback_result
  # The failback should be a clean operation, but we'll retry once.
  until: failback_result.result.Success | default(false)
  retries: 2
  delay: 15
  # Explicitly fail if the script doesn't report success.
  failed_when: not (failback_result.result.Success | default(false))

- name: Debug failback result (if verbosity is high)
  ansible.builtin.debug:
    msg: "{{ failback_result.result }}"
  when: ansible_verbosity > 1
